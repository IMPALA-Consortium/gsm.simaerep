[{"path":"https://impala-consortium.github.io/gsm.simaerep/articles/ContributorGuidelines.html","id":"branches","dir":"Articles","previous_headings":"","what":"Branches","title":"ContributorGuidelines","text":"core branches used repository : main: Contains production version package (protected). {issue#}: Contains code specific issue.","code":""},{"path":"https://impala-consortium.github.io/gsm.simaerep/articles/ContributorGuidelines.html","id":"development-process","dir":"Articles","previous_headings":"","what":"Development Process","title":"ContributorGuidelines","text":"Describe development step github issue create new branch main named issue number prefix. Use Test-driven development (TDD) develop code. Write test first, write code pass test. github actions need pass merging code main branch.","code":""},{"path":"https://impala-consortium.github.io/gsm.simaerep/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://impala-consortium.github.io/gsm.simaerep/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). gsm.simaerep: Package (One Line, Title Case). R package version 0.0.0.9000, https://impala-consortium.github.io/gsm.simaerep/.","code":"@Manual{,   title = {gsm.simaerep: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://impala-consortium.github.io/gsm.simaerep/}, }"},{"path":"https://impala-consortium.github.io/gsm.simaerep/index.html","id":"gsmsimaerep","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"{simaerep} extension {gsm} package. contains following gsm-style functions detailed : Input_CumCount() patient-level cumulative count source data Transform_Blank() step needed simaerep, defined consistency gsm Analyze_Simaerep() execute simaerep Flag_Simaerep() flag based simaerep statistics Also included required module configuration file: inst/workflow/4_modules/gsm.simaerep.yaml","code":""},{"path":"https://impala-consortium.github.io/gsm.simaerep/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version gsm.simaerep GitHub :","code":"# install.packages(\"pak\") pak::pak(\"IMPALA-Consortium/gsm.simaerep\")"},{"path":"https://impala-consortium.github.io/gsm.simaerep/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"added soon.","code":""},{"path":"https://impala-consortium.github.io/gsm.simaerep/index.html","id":"quality-control","dir":"","previous_headings":"","what":"Quality Control","title":"What the Package Does (One Line, Title Case)","text":"Since {gsm} designed use GCP framework, conducted extensive quality control part development process. particular, following early development: Unit Tests - Unit tests written core functions. Workflow Tests - Additional unit tests confirm core workflows behave expected. Data Model - Vignettes providing detailed descriptions data model. Code Examples - Cookbook Vignette provides series simple examples, functions include examples part Roxygen documentation. Function Documentation - Detailed documentation function maintained Roxygen. Package Checks - Standard package checks run using GitHub Actions must passing PRs merged. Continuous Integration - Continuous integration provided via GitHub Actions. Code Formatting - Code formatted {styler} release. Contributor Guidelines - Detailed contributor guidelines including step--step processes code development releases provided vignette.","code":""},{"path":"https://impala-consortium.github.io/gsm.simaerep/index.html","id":"parking","dir":"","previous_headings":"Quality Control","what":"Parking","title":"What the Package Does (One Line, Title Case)","text":"development progresses, also conduct following quality control steps: Qualification Workflow - assessments Qualified described Qualification Workflow Vignette. Qualification Report Vignette generated attached release. Code Review - Code review conducted using GitHub Pull Requests (PRs), log PRs included Qualification Report Vignette. Data Specifications - Machine-readable data specifications maintained KRIs. Specifications automatically added relevant function documentation. Regression Testing - Extensive QC testing done release.","code":""}]
