% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Widget_ScatterPlot.R
\name{Widget_ScatterPlot}
\alias{Widget_ScatterPlot}
\title{Scatter Plot Widget}
\usage{
Widget_ScatterPlot(
  dfResults,
  lMetric = NULL,
  dfGroups = NULL,
  dfBounds = NULL,
  bAddGroupSelect = TRUE,
  strShinyGroupSelectID = "GroupID",
  bDebug = FALSE
)
}
\arguments{
\item{dfResults}{`data.frame` A stacked summary of analysis pipeline output.
Created by passing a list of results returned by [Summarize()] to
[BindResults()]. Expected columns: `GroupID`, `GroupLevel`, `Numerator`,
`Denominator`, `Metric`, `Score`, `Flag`, `MetricID`, `StudyID`,
`SnapshotDate`.}

\item{lMetric}{`list` Metric-specific metadata for use in charts and
reporting. Created by passing an `lWorkflow` object to [MakeMetric()] and
turing it into a list. Expected columns: `File`,`MetricID`, `Group`,
`Abbreviation`, `Metric`, `Numerator`, `Denominator`, `Model`, `Score`, and
`strThreshold`. For more details see the Data Model vignette:
`vignette("DataModel", package = "gsm.kri")`.}

\item{dfGroups}{`data.frame` Group-level metadata dictionary. Created by
passing CTMS site and study data to [MakeLongMeta()]. Expected columns:
`GroupID`, `GroupLevel`, `Param`, `Value`.}

\item{dfBounds}{`data.frame` Set of predicted percentages/rates and upper-
and lower-bounds across the full range of sample sizes/total exposure
values for reporting. Created by passing `dfResults` and `dfMetrics` to
[MakeBounds()]. Expected columns: `Threshold`, `Denominator`, `Numerator`,
`Metric`, `MetricID`, `StudyID`, `SnapshotDate`.}

\item{bAddGroupSelect}{\code{logical} Add a dropdown to highlight sites? Default: \code{TRUE}.}

\item{strShinyGroupSelectID}{\code{character} Element ID of group select in Shiny context. Default: \code{'GroupID'}.}

\item{bDebug}{`logical` Print debug messages? Default: `FALSE`.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

A widget that generates a scatter plot of group-level metric results, plotting the denominator
on the x-axis and the numerator on the y-axis.
}
\examples{
## Filter data to one metric and snapshot
reportingResults_filter <- gsm.core::reportingResults \%>\%
  dplyr::filter(MetricID == "Analysis_kri0001" & SnapshotDate == max(SnapshotDate))

reportingMetrics_filter <- gsm.core::reportingMetrics \%>\%
  dplyr::filter(MetricID == "Analysis_kri0001") \%>\%
  as.list()

reportingBounds_filter <- gsm.core::reportingBounds \%>\%
  dplyr::filter(MetricID == "Analysis_kri0001" & SnapshotDate == max(SnapshotDate))

Widget_ScatterPlot(
  dfResults = reportingResults_filter,
  lMetric = reportingMetrics_filter,
  dfGroups = gsm.core::reportingGroups,
  dfBounds = reportingBounds_filter
)

}
