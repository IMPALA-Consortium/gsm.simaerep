% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Input_CumCount.R
\name{Input_CumCount}
\alias{Input_CumCount}
\title{Cumulative Numerator Event Count per Denominator Event Count}
\usage{
Input_CumCount(
  dfSubjects,
  dfNumerator,
  dfDenominator,
  strGroupCol,
  strGroupLevel = NULL,
  strSubjectCol,
  strNumeratorCol = NULL,
  strDenominatorCol = NULL,
  strNumeratorDateCol,
  strDenominatorDateCol,
  strOrphanedMethod = c("filter", "assign")
)
}
\arguments{
\item{dfSubjects}{\code{data.frame} with columns for SubjectID and any other relevant subject information}

\item{dfNumerator}{\code{data.frame} with a column for SubjectID and \code{strNumeratorDateCol}}

\item{dfDenominator}{\code{data.frame} with a column for SubjectID and \code{strDenominatorDateCol}}

\item{strGroupCol}{\code{character} Column name in \code{dfSubjects} to use for grouping.}

\item{strGroupLevel}{\code{character} value for the group level. Default: NULL defaults to \code{strGroupCol}}

\item{strSubjectCol}{\code{character} Column name in \code{dfSubjects} to use for subject ID.}

\item{strNumeratorCol}{\code{character} Column name in \code{dfNumerator} to use for numerator ID. Default: NULL}

\item{strDenominatorCol}{\code{character} Column name in \code{dfDenominator} to use for denominator ID. Default: NULL}

\item{strNumeratorDateCol}{\code{character} Column name in \code{dfNumerator} to use for numerator calculation.}

\item{strDenominatorDateCol}{\code{character} Column name in \code{dfDenominator} to use for denominator calculation.}

\item{strOrphanedMethod}{\code{character} one_of("filter", "assign") filter orphaned numerator events or assign
to random patient enrolled at site the time of event. Default: "filter"}
}
\value{
\code{data.frame} with the following specification:\tabular{lll}{
   Column Name \tab Description \tab Type \cr
   SubjectID \tab The subject ID \tab Character \cr
   GroupID \tab The group ID \tab Character \cr
   GroupLevel \tab The group type \tab Character \cr
   Numerator \tab Cumulative Count Numerator \tab Numeric \cr
   Denominator \tab Cumulative Count Denominator \tab Numeric \cr
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Calculate a subject level cumulative numerator event count per denominator event count.

This function takes in a list of data frames including dfSUBJ, dfNumerator, and dfDenominator,
and calculates a subject level cumulative numerator count per cumulative denominator count. Numerator
events between two denominator events are assigned to the later denominator event.

Numerator events before first denominator event will be assigned to the first denominator event.
Numerator events after last denominator event will be assigned to last denominator event.

When numerator events fall on the same day as a denominator event they will be assigned to that event
event if the date time columns imply that numerator event occurred after the denominator.

The data requirements for the function are as follows:
\itemize{
\item dfSubjects: A data frame with columns for SubjectID and any other relevant subject information
\item dfNumerator: A data frame with a column for SubjectID and \code{strNumeratorCol} if \code{strNumeratorMethod} is "Sum"
\item dfDenominator: A data frame with a column for SubjectID and \code{strDenominatorCol} if \code{strDenominatorMethod} is "Sum"
}

All other columns are dropped from the output data frame. GroupIDs will be added via dfSubjects if not present events
without GroupID and subjects without denominator or numerator event will be dropped.

Numerator events with no SubjectID but with GroupID can get assigned to a random enrolled subject
of the same GroupID
}
\examples{

# dfSubjects tibble with one subject and one site
dfSubjects <- tibble::tibble(
  SubjectID = 1,
  GroupID = 1
)

dfNumerator <- tibble::tibble(
    SubjectID = rep(1, 10),
    num_dt = as.Date("2000-01-01") + c(months(0:4), rep(months(7), 2), months(9:11)),
  ) \%>\%
  dplyr::mutate(
    num_dt = num_dt + lubridate::hours(12)
  )

# dfNumerator tibble with one subject 10 AEs, two of which on same day
dfNumerator

dfDenominator <- tibble::tibble(
    SubjectID = rep(1, 4),
    denom_dt = c(as.Date(c("2000-01-03", "2000-04-12", "2000-08-01", "2000-11-12")))
  ) \%>\%
  dplyr::mutate(
    denom_dt = denom_dt + lubridate::hours(1)
  )

# dfDenominator tibble with one subject 4 visits, one on same day as two Numerator events
# Denominator time indicates that they occurr before Numerator events
dfDenominator


# numerator before first denominator rolls up to first denominator
# numerator after last denominator rolls back to last denominator
# two numerator events on 08-01 add to the 3rd denominator event on same day

Input_CumCount(
  dfSubjects = dfSubjects,
  dfNumerator = dfNumerator,
  dfDenominator = dfDenominator,
  strSubjectCol = "SubjectID",
  strGroupCol = "GroupID",
  strGroupLevel = "Site",
  strNumeratorDateCol = "num_dt",
  strDenominatorDateCol  = "denom_dt"
)



# {clindata} Example for cumulative AE per Visit Count
Input_CumCount(
    dfSubjects = clindata::rawplus_dm,
    dfNumerator = clindata::rawplus_ae,
    dfDenominator = clindata::rawplus_visdt \%>\% dplyr::mutate(visit_dt = lubridate::ymd(visit_dt)),
    strSubjectCol = "subjid",
    strGroupCol = "siteid",
    strGroupLevel = "Site",
    strNumeratorDateCol = "aest_dt",
    strDenominatorDateCol  = "visit_dt"
  )

}
