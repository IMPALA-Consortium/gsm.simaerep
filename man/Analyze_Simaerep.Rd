% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analyze_Simaerep.R
\name{Analyze_Simaerep}
\alias{Analyze_Simaerep}
\title{Analyze Simaerep}
\usage{
Analyze_Simaerep(dfInput)
}
\arguments{
\item{dfInput}{\code{data.frame} as returned by \code{\link[=Input_CumCount]{Input_CumCount()}}}
}
\value{
\code{data.frame} with the following specification:\tabular{lll}{
   Column Name \tab Description \tab Type \cr
   GroupID \tab The group ID \tab Character \cr
   MetricExpected \tab Expected ratio from simulations \tab Numeric \cr
   MetricGroup \tab Ratio all subjects in GroupID \tab Numeric \cr
   OverReportingProbability \tab Probability over-reporting numerator events \tab Numeric \cr
   UnderReportingProbability \tab Probability under-reporting numerator events \tab Numeric \cr
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Calculate over and under-reporting probabilities for numerator denominator ratio using \code{\link[simaerep:simaerep]{simaerep::simaerep()}}.

Uses inframe \code{simaerep} method and does not apply multiplicity correction as per latest recommendations.

This function takes dfInput data frame as returned by \code{\link[=Input_CumCount]{Input_CumCount()}}
}
\examples{
# {clindata} Example for cumulative AE per Visit Count
dfInput <- Input_CumCount(
    dfSubjects = clindata::rawplus_dm,
    dfNumerator = clindata::rawplus_ae,
    dfDenominator = clindata::rawplus_visdt \%>\% dplyr::mutate(visit_dt = lubridate::ymd(visit_dt)),
    strSubjectCol = "subjid",
    strGroupCol = "siteid",
    strGroupLevel = "Site",
    strNumeratorDateCol = "aest_dt",
    strDenominatorDateCol  = "visit_dt"
  )

Analyze_Simaerep(dfInput)

}
\seealso{
\code{\link[simaerep:simaerep]{simaerep::simaerep()}}, \code{\link[=Input_CumCount]{Input_CumCount()}}
}
