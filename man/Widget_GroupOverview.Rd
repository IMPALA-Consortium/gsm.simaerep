% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Widget_GroupOverview.R
\name{Widget_GroupOverview}
\alias{Widget_GroupOverview}
\title{Group Overview Widget}
\usage{
Widget_GroupOverview(
  dfResults,
  dfMetrics,
  dfGroups,
  strGroupLevel = NULL,
  strGroupSubset = "red",
  strGroupLabelKey = "InvestigatorLastName",
  bDebug = FALSE
)
}
\arguments{
\item{dfResults}{`data.frame` A stacked summary of analysis pipeline output.
Created by passing a list of results returned by [Summarize()] to
[BindResults()]. Expected columns: `GroupID`, `GroupLevel`, `Numerator`,
`Denominator`, `Metric`, `Score`, `Flag`, `MetricID`, `StudyID`,
`SnapshotDate`.}

\item{dfMetrics}{`data.frame` Metric-specific metadata for use in charts and
reporting. Created by passing an `lWorkflow` object to [MakeMetric()].
Expected columns: `File`, `MetricID`, `Group`, `Abbreviation`, `Metric`,
`Numerator`, `Denominator`, `Model`, `Score`, and `Threshold`. For more
details see the Data Model vignette: `vignette("DataModel", package =
"gsm.core")`.}

\item{dfGroups}{`data.frame` Group-level metadata dictionary. Created by
passing CTMS site and study data to [MakeLongMeta()]. Expected columns:
`GroupID`, `GroupLevel`, `Param`, `Value`.}

\item{strGroupLevel}{\code{character} Value for the group level. Default: NULL and taken from \code{dfMetrics$GroupLevel} if available.}

\item{strGroupSubset}{\code{character} Subset of groups to include in the table. Default: 'red'. Options:
\itemize{
\item 'all': All groups.
\item 'red': Groups with 1+ red flags.
\item 'red/amber': Groups with 1+ red/amber flag.
\item 'amber': Groups with 1+ amber flag.
}}

\item{strGroupLabelKey}{\code{character} Value for the group label key. Default: 'InvestigatorLastName'.}

\item{bDebug}{`logical` Print debug messages? Default: `FALSE`.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

A widget that generates a group overview table of group-level metric results across one or more
metrics.
}
\examples{
# site-level report
Widget_GroupOverview(
  dfResults = FilterByLatestSnapshotDate(gsm.core::reportingResults),
  dfMetrics = gsm.core::reportingMetrics,
  dfGroups = gsm.core::reportingGroups
)

# filter site-level report to all flags
Widget_GroupOverview(
  dfResults = FilterByLatestSnapshotDate(gsm.core::reportingResults),
  dfMetrics = gsm.core::reportingMetrics,
  dfGroups = gsm.core::reportingGroups,
  strGroupSubset = "all"
)

# country-level report
reportingMetrics <- gsm.core::reportingMetrics
reportingMetrics$GroupLevel <- "Country"
Widget_GroupOverview(
  dfResults = FilterByLatestSnapshotDate(gsm.core::reportingResults),
  dfMetrics = gsm.core::reportingMetrics,
  dfGroups = gsm.core::reportingGroups,
  strGroupLevel = "Country"
)

}
